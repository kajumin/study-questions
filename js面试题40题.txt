1.js的基本规范
1) 不要在同一行声明多个变量
2) 命名要有意义，使用驼峰命名法
3) 语句结束加分号
4) for if else 代码快必须使用大括号
5) 使用 ===或!==来比较true/false或者数值
6) 函数应该有返回值
7) switch必须带有default分支

2.ajax 
1) 创建XMLHttpRequest对象（异步调用对象）  new XMLHttpRequest()
2) 创建新的Http请求（方法、URL、是否异步）   open('GET', 'url')
3) 设置响应HTTP请求状态变化的函数    onreadystatechange  xhr.readyState  xhr.status
4) 发送http请求 发起请求 xhr.send(data);  xhr.send(null) //get
5) 获取异步调用返回的数据    xhr.responseText

1) 页面初次加载时，尽量在web服务器一次性输出所有相关的数据，只在页面加载完成之后，用户进行操作时采用ajax进行交互。
2) 同步ajax在IE上会产生页面假死的问题。所以建议采用异步ajax。
3) 尽量减少ajax请求次数
4) ajax安全问题，对于敏感数据在服务器端处理，避免在客户端处理过滤。对于关键业务逻辑代码也必须放在服务器端处理。


3. js几种类型的值
(1) 基本数据类型存储在栈中，引用数据类型（对象）存储在堆中，指针放在栈中。
(2) 两种类型的区别是：存储位置不同；原始数据类型直接存储在栈中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；引用数据类型存储在堆中的对象,占据空间大、大小不固定, 如果存储在栈中，将会影响程序运行的性能, 引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。

4.
栈（stack）：由编译器自动分配释放，存放函数的参数值，局部变量等；
堆（heap）：一般由程序员分配释放，若程序员不释放，程序结束时可能由操作系统释放。

5.window对象和document对象
window对象代表浏览器中打开的一个窗口。document对象代表整个html文档。
实际上，document对象是window对象的一个属性。

6.
null 表示一个对象被定义了，但存放了空指针，转换为数值时为0。
undefined  表示声明的变量未初始化，转换为数值时为NaN。
typeof(null) -- object;
typeof(undefined) -- undefined

7.  ["1", "2", "3"].map(parseInt)  // ["1", NaN, NaN]
parseInt("1", 0)  为0    将作为十进制数字的字符串
parseInt("2", 1)  为1    结果返回NaN
parseInt("3", 2)  为2    redix为2-36之间   不属于radix指定进制下的字符，解析结果为NaN

8. 关于事件，IE与火狐的事件机制有什么区别？如何阻止冒泡？
IE为事件冒泡，Firefox同时支持事件捕获和事件冒泡, 但并非所有浏览器都支持事件捕获. 
e.stopPropagation()   e.cencelBubble = false
e.preventDefault()     e.returnValue = false

9. 闭包
闭包指的是一个函数可以访问另一个函数作用域中变量。

10.严格模式
1) 消除js不合理，不严谨地方，减少怪异行为
2) 消除代码运行的不安全之处，
3) 提高编译器的效率，增加运行速度
4) 为未来的js新版本做铺垫。


10. JS延迟加载的方式有哪些？
JS的延迟加载有助与提高页面的加载速度。
defer和async、动态创建DOM方式（用得最多）、按需异步载入JS
defer： 延迟脚本。立即下载，但延迟执行（延迟到整个页面都解析完毕后再运行），
             按照脚本出现的先后顺序执行。
async：异步脚本。下载完立即执行，不能保证按照脚本出现的先后顺序执行。


11. 同步和异步的区别?
同步的概念在操作系统中：不同进程协同完成某项工作而先后次序调整（通过阻塞、唤醒等方式），同步强调的是顺序性，谁先谁后。异步不存在顺序性。
同步：浏览器访问服务器，用户看到页面刷新，重新发请求，等请求完，页面刷新，新内容出现，用户看到新内容之后进行下一步操作。
异步：浏览器访问服务器请求，用户正常操作，浏览器在后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。

12.跨域
1) document.domain方法  iframe   只能解决主域相同的跨域
2) window.name方法 
3) JSONP


13. 页面编码和被请求的资源编码如果不一致如何处理？引入时定义编码格式
若请求的资源编码，如外引js文件编码与页面编码不同。可根据外引资源编码方式定义为 charset="utf-8"或"gbk"。
比如：http://www.yyy.com/a.html 中嵌入了一个http://www.xxx.com/test.js
a.html 的编码是gbk或gb2312的。而引入的js编码为utf-8的 ，那就需要在引入的时候
<script src="http://www.xxx.com/test.js&quot; charset="utf-8"></script>引入时定义编码格式

14.  AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？
AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。
CMD 是 SeaJS 在推广过程中对模块定义的规范化产出。
区别:
1) CMD 推崇依赖就近，AMD推崇依赖前置。
2) AMD 的API默认是一个当多个用，CMD 的 API 严格区分，推崇职责单一。

15. requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何缓存的？）
   核心是js的加载模块，通过正则匹配模块以及模块的依赖关系，保证文件加载的先后顺序，
   根据文件的路径对加载过的文件做了缓存。

16 那些操作会造成内存泄漏
    全局变量、闭包、DOM清空或删除时，事件未清除、子元素存在引用

17 什么是Cookie 隔离？（或者：请求资源的时候不要带cookie怎么做）
通过使用多个非主要域名来请求静态文件，如果静态文件都放在主域名下，那静态文件请求的时候带有的cookie的数据提交给server是非常浪费的，还不如隔离开。

因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。同时这种方式不会将cookie传入server，也减少了server对cookie的处理分析环节，提高了server的http请求的解析速度。

eg: 
(1) 第一个字符必须是一个字母、下划线（_）或一个美元符号（$）

18. XML与JSON的区别？
1) 数据体积方面。JSON相对于XML来讲，数据的体积小，传递的速度更快些。
2) 数据交互方面。JSON与JavaScript的交互更加方便，更容易解析处理，更好的数据交互。
3) 传输速度方面。JSON的速度要远远快于XML。
4) 数据描述方面。JSON对数据的描述性比XML较差。

19. HTML与XML的区别？
（1）XML用来传输和存储数据，HTML用来显示数据；
（2）XML使用的标签不用预先定义
   
（3）XML标签必须成对出现
  (4)   XML对大小写敏感
（4）XML中空格不会被删减
（5）XML中所有特殊符号必须用编码表示
（6）XML中的图片必须有文字说明

20. 渐进增强与优雅降级
渐进增强：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进，达到更好的用户体验。
优雅降级：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。


21.
1) 标记清除：
这个算法把“对象是否不再需要”简化定义为“对象是否可以获得”。
这个算法假定设置一个叫做根（root）的对象（在Javascript里，根是全局对象）。定期的，
垃圾回收器将从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象。
从根开始，垃圾回收器将找到所有可以获得的对象和所有不能获得的对象。

2) 引用计数：
这是最简单的垃圾收集算法。此算法把“对象是否不再需要”
简化定义为“对象有没有其他对象引用到它”。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收。
该算法有个限制：无法处理循环引用。两个对象被创建，并互相引用，形成了一个循环。
它们被调用之后不会离开函数作用域，所以它们已经没有用了，可以被回收了。然而，引用计数算法考虑到它们互相都有至少一次引用，所以它们不会被回收。

22.
 如何删除一个cookie？
1） 将cookie的失效时间设置为过去的时间（expires）
document.cookie = ‘user=’+ encodeURIComponent(‘name’) + ';
expires=’+ new Date(0);
2） 将系统时间设置为当前时间往前一点时间
var data = new Date();
date.setDate(date.getDate()-1);
expires=d.toUTCString()
getTime()

23.attribute与property的区别？
attribute是dom元素在文档中作为html标签拥有的属性
property是dom元素在js中作为对象拥有的属性。
所以，对于html的标准属性来说，attribute和property是同步的，是会自动更新的。但对于自定义属性，他们不同步。

24. Ajax请求的页面历史记录状态问题？
（1）通过location.hash记录状态，让浏览器记录Ajax请求时页面状态的变化。
（2）通过HTML5的history.pushstate，来实现浏览器地址栏的无刷新改变。