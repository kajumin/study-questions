(1)初始nginx
(2)nginx架构基础
(3)详解http模块
(4)反向代理和负载均衡
(5)nginx的系统层性能优化
(6)源码视觉深入使用nginx与openResty
静态资源服务   反向代理服务   api服务
==========nginx为什么会出现?
数据量快速增长
摩尔定理: 性能提升
低效的apache   一个连接对应一个进程
=========使用优点
1.高并发,  高性能       
2.可扩展性好  (模块化设计)
3.高可靠性     (运行几年)    
4.热部署        (升级)
5.BSD许可证

======nginx的组成
二进制可执行文件         由各模块源码编译出的一个文件
nginx.conf  配置文件    控制nginx的行为
access.log   访问日志    记录每一条http请求信息
error.log     错误日志    定位问题

=======版本发布
feature  新增功能
bugfix   修复bug
change  小的重构
  

======选择nginx版本
开源版  nginx.org
商业版  nginx.com
阿里巴巴的tengine
openResty  开源版
openResty  商业版

======nginx安装
下载
wget http://nginx.org/download/nginx-1.18.0.tar.gz   //下载
tar  -xzf nginx-1.18.0.tar.gz   //解压
cd   nginx-1.18.0   //进入nginx目录

介绍各目录
auto  => cc编译  
changes
changes.ru   
conf       实例文件
contrib   wm
html    两个标准html文件   50x.html   index.html
man    帮助文件
src       源代码
    编译nginx   ./configure --prefix=/geek/nginx   指定目录在home/geek/nginx目录下
configure介绍
中间文件介绍编译
安装

1.什么是反向代理和负载均衡
  正向代理:  知道去哪个服务器     反向代理:  不知道取了哪个服务器的
  负载均衡:   ngnix知道  分担服务器的压力  多个服务器放一样的代码   中间服务器(ngnix)挑选一个压力小的
                   ngnix反向代理实现负载均衡

ip_hash       用户落到那台服务器上 保证用户一直在同一台服务器
server         指令 权重高就落到的几率大
HTTP upstream   指令及相关参数   是ngnix服务器的一个重要模块
ip_hash;      客户端总是访问同一个指令
====================命令
start nginx         开启服务
nginx -s quit      退出服务
nginx -s stop     强制关闭   
nginx -s reload  重载服务    
nginx -t             验证配置文件
nginx -c            使用配置文件
nginx -h            使用帮助
====================我们需要给运维的人
worker_processes 4;
events {
	worker_connections 1024;
}
http{
	upstream firsttest {
		ip_hash;
		server 111.13.100.92;  //服务器
		server 111.13.100.92 weight=2(权重);  //服务器
 		server 111.13.179.253;
	}
	server {
		listen: 8080;
		location / {
			proxy_pass http://firsttest  //域名
		}
	}

}

==================nginx跨域资源共享
nginx.conf =>server模块 => location
add_header 'Access-Control-Allow-Origin' '*'
add_header 'Access-Control-Allow-Methods' 'GET,POST,OPRIONS,PUT,DELETE'


